import{_ as u,o as h,c as d,a as t,n as o,t as S,w as f,v as k,l as x,d as a,g as y,s as I,e as p,r as _,f as v,h as E,F as N,K as l}from"./index-c1601262.js";const L={name:"LivesCounter",props:{lives:Number}},w={class:"hearts"};function $(r,s,i,m,e,n){return h(),d("div",w,[t("span",{class:o([{broken:i.lives<=0},"heart"])},null,2),t("span",{class:o([{broken:i.lives<=1},"heart"])},null,2),t("span",{class:o([{broken:i.lives<=2},"heart"])},null,2)])}const C=u(L,[["render",$]]);const R={name:"ScoreCounter",props:{score:Number,bestScore:Number}},V={class:"score"},T=t("span",null,"Score ",-1),F={title:"New Record!"};function M(r,s,i,m,e,n){return h(),d("div",V,[T,t("span",null,S(i.score),1),f(t("span",F,"*",512),[[k,i.score>i.bestScore]])])}const P=u(R,[["render",M]]);const B={name:"MainView",components:{Lives:C,Score:P},props:{mode:String,voice:String},data(){return{speech:void 0,lives:3,score:0,bestScore:0,error:!1,maxNumber:void 0,number:void 0,numbers:[],guess:void 0,intervalId:void 0,timeLeft:0,focusInput:!1}},mounted(){this.maxNumber=(()=>{switch(this.mode){case"easy":return 99;case"medium":return 999;case"hard":return 9999;default:return 99}})(),this.bestScore=x(this.mode,this.voice),this.speech=new SpeechSynthesisUtterance,this.speech.volume=a(l.PREFERENCE_VOLUME,1),this.speech.rate=a(l.PREFERENCE_RATE,1),this.speech.pitch=a(l.PREFERENCE_PITCH,1),this.speech.voice=y(this.voice),this.speech.lang=this.speech.voice.lang,this.speech.onend=()=>{clearInterval(this.intervalId),this.focusInput&&this.$nextTick(()=>I(this.$refs.input)),setTimeout(()=>window.scrollTo(0,0),200),this.intervalId=setInterval(this.tick,1e3)}},methods:{tick(){--this.timeLeft>0||(clearInterval(this.intervalId),this.guess=this.number,this.error=!0,--this.lives==0&&setTimeout(()=>{p(this.mode,this.voice,this.score),this.$router.push(`/gameover/${this.score}/${this.bestScore}`)},3e3))},start(r){this.guess="",this.error=!1,this.focusInput=r,this.timeLeft=5,this.speech.text=this.number=this.getNumber(),console.log(this.number),speechSynthesis.speak(this.speech)},check(){this.guess==this.number&&(clearInterval(this.intervalId),this.score++,this.start(!1))},back(){clearInterval(this.intervalId),p(this.mode,this.voice,this.score),this.$router.push(this.score>0?`/gameover/${this.score}/${this.bestScore}`:"/")},getNumber(){return this.numbers.length==0&&(this.numbers=[...Array(this.maxNumber+1).keys()].map(r=>({value:r,sort:Math.random()})).sort((r,s)=>r.sort-s.sort).map(({value:r})=>r)),this.numbers.pop()}}},K={class:"topbar"},U=["disabled"],A=["disabled"],D=["value"];function z(r,s,i,m,e,n){const b=_("Lives"),g=_("Score");return h(),d(N,null,[t("span",K,[v(b,{lives:e.lives},null,8,["lives"]),v(g,{score:e.score,bestScore:e.bestScore},null,8,["score","bestScore"]),t("span",{class:"back",onClick:s[0]||(s[0]=c=>n.back())})]),t("button",{class:"button circle play",disabled:e.timeLeft>0||e.lives==0,onClick:s[1]||(s[1]=c=>n.start(!0))},null,8,U),f(t("input",{class:o(["number-input",{error:e.error}]),ref:"input",disabled:e.timeLeft<=0,type:"text",inputmode:"numeric",pattern:"[0-9]*","onUpdate:modelValue":s[2]||(s[2]=c=>e.guess=c),onKeyup:s[3]||(s[3]=c=>n.check())},null,42,A),[[E,e.guess]]),t("progress",{class:o(["progress",{hidden:e.timeLeft==0}]),value:e.timeLeft,max:"5"},null,10,D)],64)}const O=u(B,[["render",z],["__scopeId","data-v-f3407141"]]);export{O as default};
